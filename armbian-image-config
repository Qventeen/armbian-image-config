#!/bin/bash
#
# Armbian Image Config Tool
#
# This file is licensed under the terms of the GNU General Public
# License version 2. This program is licensed "as is" without any
# warranty of any kind, whether express or implied.
#
# This file is a part of the Armbian Image Config Tool
# https://github.com/botfap/armbian-image-config/
#
# Copyright (c) 2018 botfap, botfap@faphq.icu
#

IFS=
AIC_VER="0.31"
AIC_MNT="tmproot"
AIC_IMG="${1}"
AIC_FUNC="${2}"
AIC_ARG1="${3}"
AIC_ARG2="${4}"
AIC_ARG3="${5}"
AIC_ARG4="${6}"
AIC_ARG5="${7}"
AIC_ARG6="${8}"
AIC_ARG7="${9}"
AIC_ARG8="${10}"


#echo "img $AIC_IMG"
#echo "func $AIC_FUNC"
#echo "arg1 $AIC_ARG1"
#echo "arg2 $AIC_ARG2"
#echo "arg3 $AIC_ARG3"
#echo "arg4 $AIC_ARG4"
#echo "arg5 $AIC_ARG5"
#echo "arg6 $AIC_ARG6"
#echo "arg7 $AIC_ARG7"
#echo "arg8 $AIC_ARG8"

source lib/help.func.sh
source lib/core.func.sh
source lib/net.func.sh

###
### functions
###

exec_rootshell () {
	mount_image
	
	read -p "Image mounted at "$AIC_MNT". Press a key to unmount... " -n1 -s
	
	unmount_image
}

set_user () {
	echo "$AIC_ARG1 not yet implemented"
}

set_log2ram () {
	echo "$AIC_ARG1 not yet implemented"
}

set_remote () {
	echo "$AIC_ARG1 not yet implemented"
}

###
### start
###

case "$AIC_FUNC" in
    n|hostname)
    	if [ -n "$AIC_ARG1" ]; then
    		set_hostname
    	else
    		helpme_hostname
    	fi
        ;;
    e|ethernet)
    	case "$AIC_ARG1" in
    		s|static)
				set_ethernet_static
				;;
			d|dhcp)
				set_ethernet_dhcp
				;;
			*)
				helpme_ethernet
				;;
 		esac
    	;;
    w|wifi)
    	case "$AIC_ARG1" in
    		s|static)
				set_wifi_static
				;;
			d|dhcp)
				set_wifi_dhcp
				;;
			*)
				helpme_wifi
				;;
 		esac   		 
    	;;
    u|user)
    	todo
		;;
    l|log2ram)
    	todo
		;;
    r|remote)
		todo
		;;
    t|template)
		if [ -f "$AIC_ARG1" ]; then
			template_apply
		else
    		helpme_template
    	fi
		;;
    x|rootshell)
		exec_rootshell
		;;
	p|package)
		template_package
		;;
    h|help)
    	helpme
		;;
	*)
		helpme
		;;
esac





